// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vending.Machine.Data;

#nullable disable

namespace Vending.Machine.Data.Migrations
{
    [DbContext(typeof(VendingMachineContext))]
    partial class VendingMachineContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Vending.Machine.Domain.Core.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendingMachineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VendingMachineId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.VendingMachine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("VendingMachines");
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.VendingMachineAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("VendingMachineId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VendingMachineId");

                    b.ToTable("VendingMachineAccount");
                });

            modelBuilder.Entity("Vending.Machine.Domain.UserAccountManagement.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.Product", b =>
                {
                    b.HasOne("Vending.Machine.Domain.Core.VendingMachine", null)
                        .WithMany("Products")
                        .HasForeignKey("VendingMachineId");
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.VendingMachine", b =>
                {
                    b.OwnsOne("Vending.Machine.Domain.Core.Money", "Money", b1 =>
                        {
                            b1.Property<string>("VendingMachineId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<decimal>("Value")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("VendingMachineId");

                            b1.ToTable("VendingMachines");

                            b1.WithOwner()
                                .HasForeignKey("VendingMachineId");
                        });

                    b.Navigation("Money")
                        .IsRequired();
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.VendingMachineAccount", b =>
                {
                    b.HasOne("Vending.Machine.Domain.Core.VendingMachine", null)
                        .WithMany("Accounts")
                        .HasForeignKey("VendingMachineId");
                });

            modelBuilder.Entity("Vending.Machine.Domain.Core.VendingMachine", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
